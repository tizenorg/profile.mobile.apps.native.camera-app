/*
* Copyright (c) 2000-2015 Samsung Electronics Co., Ltd All Rights Reserved
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*
*/


#include "../../inc/edc_image_name.h"
#include "../../inc/edc_defines.h"


#define GRID_DEFAULT_BG_COLOR		0 0 0 0
#define GRID_ICON_PRESSED_COLOR	255 255 255 178
#define OFFSET_X	2
#define OFFSET_Y	-2
#define OFFSET_TEXT_X	10
#define OFFSET_TEXT_Y	-10

#define GENGRID_PROGRAM_DEFAULT( TARGET ) \
         program { name: "default"; \
            signal: "elm,state,default"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "focus_bg"; \
            TARGET \
         } \


collections {
	base_scale: 1.8;
	images {
		image: MANAGE_EFFECT_PRESS COMP;
		image: MANAGE_EFFECT_SELECT COMP;
		image: MODE_TEXT_BG COMP;
	}

//for timer grid
	group {
		name: "elm/gengrid/item/timer_grid_camera/default";
		data.item: "contents" "elm.icon.normal elm.icon.press";
		data.item: "focus_highlight" "on";

		parts {
			part {
				name: "bg";
				type: RECT;
				description {
					color: GRID_DEFAULT_BG_COLOR;
				}
			}
			part {
				name: "elm.icon.normal";
				type: SWALLOW;
				description {
					state: "default" 0.0;
					min: TIMER_GENGRID_POPUP_ITEM_ICON_WIDTH TIMER_GENGRID_POPUP_ITEM_ICON_HEIGHT;
					max: TIMER_GENGRID_POPUP_ITEM_ICON_WIDTH TIMER_GENGRID_POPUP_ITEM_ICON_HEIGHT;
					rel1.to: "bg";
					rel2.to: "bg";
				}
				description {
					state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "elm.icon.press";
				type: SWALLOW;
				mouse_events:  0;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.icon.normal";
					rel2.to: "elm.icon.normal";
				}
				description {
					state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "select_bg";
				type: RECT;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.icon.normal";
					rel2.to: "elm.icon.normal";
				}
				description {
					state: "pressed" 0.0;
					inherit: "default" 0.0;
				}
			}
			part {
				name: "reorder_bg";
				type: RECT;
				repeat_events: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.icon.normal";
					rel2.to: "elm.icon.normal";
					color: 0 0 0 0;
				}
			}
			part {
				name: "focus_bg";
				type: IMAGE;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.icon.normal";
					rel2.to: "elm.icon.normal";
					color: 0 0 0 0;
				}
				description {
					state: "enabled" 0.0;
					inherit: "default" 0.0;
				}
			}
		}

		programs {
			program { name: "selected";
				signal: "elm,state,selected";
				source: "elm";
				script {
					set_state(PART:"select_bg", "pressed",  0.0);
					set_state(PART:"elm.icon.normal", "selected", 0.0);
					set_state(PART:"elm.icon.press", "selected",  0.0);
				}
			}
			program { name: "unselected";
				signal: "elm,state,unselected";
				source: "elm";
				script {
					set_state(PART:"select_bg", "default",  0.0);
					set_state(PART:"elm.icon.normal", "default", 0.0);
					set_state(PART:"elm.icon.press", "default",  0.0);
				}
			}
			program { name: "action_focus";
				signal: "elm,action,focus_highlight,show";
				source: "elm";
				action: STATE_SET "enabled" 0.0;
				target: "focus_bg";
			}
			program { name: "action_unfocus";
				signal: "elm,action,focus_highlight,hide";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "focus_bg";
			}
			program {
				name: "gengrid_item_selected";
				signal: "gengrid_item,state,selected";
				source: "gengrid_item";
				script {
					set_state(PART:"select_bg", "pressed",  0.0);
					set_state(PART:"elm.icon.normal", "selected", 0.0);
					set_state(PART:"elm.icon.press", "selected",  0.0);
				}
			}
			program {
				name: "gengrid_item_unselected";
				signal: "gengrid_item,state,unselected";
				source: "gengrid_item";
				script {
					set_state(PART:"select_bg", "default",  0.0);
					set_state(PART:"elm.icon.normal", "default", 0.0);
					set_state(PART:"elm.icon.press", "default",  0.0);
				}
			}
			GENGRID_PROGRAM_DEFAULT(
				target: "elm.icon.normal";
				target: "select_bg";
			)
		}
	}

//for effect grid
	group {
		name: "elm/gengrid/item/effect_grid_camera/default";
		data.item: "texts" "elm.text";
		data.item: "contents" "elm.swallow.icon";
		data.item: "focus_highlight" "on";

		parts {
			part {
				name: "bg";
				type: RECT;
				scale:1;
				description {
					color: GRID_DEFAULT_BG_COLOR;
				}
			}
			part { name: "select_bg";
				type: RECT;
				scale:1;
				description {
					state: "default" 0.0;
					visible: 0;
					min: 118 118;
					//max: 118 118;
					rel1.to: "bg";
					rel2.to: "bg";
					color: 0 255 255 255;
				}
				description {
					state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part {
				name: "elm.swallow.icon";
				type: SWALLOW;
				scale:1;
				description {
					state: "default" 0.0;
					min: 116 116;
					//max: 116 116;
					rel1.to: "bg";
					rel1.offset: OFFSET_X OFFSET_X;
					rel2.to: "bg";
					rel2.offset: OFFSET_Y OFFSET_Y;
				}
			}
			part { name: "text_bg";
				type: IMAGE;
				scale:1;
				description {
					state: "default" 0.0;
					visible: 1;
					rel1.to: "elm.swallow.icon";
					rel2.to: "elm.swallow.icon";
					image.normal: MODE_TEXT_BG;
				}
			}
			part { name: "press_bg";
				type: IMAGE;
				scale:1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.swallow.icon";
					rel2.to: "elm.swallow.icon";
					image.normal: MANAGE_EFFECT_PRESS;
				}
				description {
					state: "pressed" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
/*			part { name: "select_bg";
				type: IMAGE;
				scale:1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.swallow.icon";
					rel2.to: "elm.swallow.icon";
					image.normal: MANAGE_EFFECT_SELECT;
				}
				description {
					state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}*/
			part {
				name: "reorder_bg";
				type: RECT;
				scale:1;
				repeat_events: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.swallow.icon";
					rel2.to: "elm.swallow.icon";
					color: 0 0 0 0;
				}
			}
			part {
				name: "focus_bg";
				type: IMAGE;
				mouse_events: 0;
				scale:1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.swallow.icon";
					rel2.to: "elm.swallow.icon";
					color: 0 0 0 0;
				}
				description {
					state: "enabled" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "elm.text";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 110 110;
					//max: 203 203;
					align: 0.5 1.0;
					rel1.to: "elm.swallow.icon";
					rel1.offset: OFFSET_TEXT_X 0;
					rel2.to: "elm.swallow.icon";
					rel2.offset: OFFSET_TEXT_Y 0;
					text {
						align:    0.5 0.95;
						text:"ABC";
						size: 16;
						style: "mode_text_middle";
					}
					color: 255 255 255 255;
				}
				description { state: "pressed" 0.0;
					inherit:"default" 0.0;
					text {
						align:    0.5 0.5;
						text:"ABC";
						size: 12;
						style: "mode_text_middle";
					}
					color: 255 255 255 255;
				}
				description { state: "selected" 0.0;
					inherit:"pressed" 0.0;
				}
			}
		}

		programs {
			program { name: "selected";
				signal: "elm,state,selected";
				source: "elm";
				action: STATE_SET "pressed" 0.0;
				target: "press_bg";
			}
			program { name: "unselected";
				signal: "elm,state,unselected";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "press_bg";
			}
			program { name: "action_focus";
				signal: "elm,action,focus_highlight,show";
				source: "elm";
				action: STATE_SET "enabled" 0.0;
				target: "focus_bg";
			}
			program { name: "action_unfocus";
				signal: "elm,action,focus_highlight,hide";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "focus_bg";
			}
			program {
				name: "gengrid_item_selected";
				signal: "gengrid_item,state,selected";
				source: "gengrid_item";
				action: STATE_SET "selected" 0.0;
				target: "select_bg";
			}
			program {
				name: "gengrid_item_unselected";
				signal: "gengrid_item,state,unselected";
				source: "gengrid_item";
				action: STATE_SET "default" 0.0;
				target: "select_bg";
			}
			GENGRID_PROGRAM_DEFAULT(
				target: "elm.swallow.icon";
				target: "press_bg";
				target: "select_bg";
			)
		}
	}


//for shot mode grid
#define SHOT_MODE_GENGRID_POPUP_ITEM_ICON_WIDTH	141
#define SHOT_MODE_GENGRID_POPUP_ITEM_ICON_HEIGHT	141
#define SHOT_MODE_GENGRID_POPUP_TEIM_TEXT_WIDTH	141
#define SHOT_MODE_GENGRID_POPUP_TEIM_TEXT_HEIGHT	20
#define SHOT_MODE_GENGRID_POPUP_TEIM_TEXT_TOP	113
#define SHOT_MODE_GENGRID_POPUP_TEIM_TEXT_BOTTOM	133

images {
	image: SHOOTING_MODE_ICON_PRESS_IMAGE COMP;
}
	group {
		name: "elm/gengrid/item/shot_mode_grid_camera/default";
		data.item: "texts" "elm.text";
		data.item: "contents" "elm.swallow.icon";
		data.item: "focus_highlight" "on";

		parts {
			part {
				name: "bg";
				type: RECT;
				description {
					color: GRID_DEFAULT_BG_COLOR;
				}
			}
			part {
				name: "elm.swallow.icon";
				type: SWALLOW;
				description {
					state: "default" 0.0;
					min: SHOT_MODE_GENGRID_POPUP_ITEM_ICON_WIDTH SHOT_MODE_GENGRID_POPUP_ITEM_ICON_HEIGHT;
					max: SHOT_MODE_GENGRID_POPUP_ITEM_ICON_WIDTH SHOT_MODE_GENGRID_POPUP_ITEM_ICON_HEIGHT;
					rel1.to: "bg";
					rel2.to: "bg";
				}
			}
			part { name: "select_bg";
				type: IMAGE;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.swallow.icon";
					rel2.to: "elm.swallow.icon";
					image {
						normal: SHOOTING_MODE_ICON_PRESS_IMAGE;
					}
				}
				description {
					state: "pressed" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part {
				name: "reorder_bg";
				type: RECT;
				repeat_events: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.swallow.icon";
					rel2.to: "elm.swallow.icon";
					color: 0 0 0 0;
				}
			}
			part {
				name: "focus_bg";
				type: IMAGE;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.swallow.icon";
					rel2.to: "elm.swallow.icon";
					color: 0 0 0 0;
				}
				description {
					state: "enabled" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "elm.text";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: SHOT_MODE_GENGRID_POPUP_TEIM_TEXT_WIDTH SHOT_MODE_GENGRID_POPUP_TEIM_TEXT_HEIGHT;
					max: SHOT_MODE_GENGRID_POPUP_TEIM_TEXT_WIDTH SHOT_MODE_GENGRID_POPUP_TEIM_TEXT_HEIGHT;
					align: 0.5 0.5;
					rel1 {relative: 0.0 SHOT_MODE_GENGRID_POPUP_TEIM_TEXT_TOP/SHOT_MODE_GENGRID_POPUP_ITEM_ICON_HEIGHT; to: "elm.swallow.icon"; }
					rel2 {relative: 1.0 SHOT_MODE_GENGRID_POPUP_TEIM_TEXT_BOTTOM/SHOT_MODE_GENGRID_POPUP_ITEM_ICON_HEIGHT; to: "elm.swallow.icon"; }
					text {
						size: 18;
						align:    0.5 0.5;
					}
					color: 0 0 0 255;
				}
				description { state: "pressed" 0.0;
					inherit:"default" 0.0;
					text {
						size: 18;
						align:    0.5 0.5;
					}
					color: 255 255 255 255;
				}
			}
		}

		programs {
			program { name: "selected";
				signal: "elm,state,selected";
				source: "elm";
				action: STATE_SET "pressed" 0.0;
				target: "elm.text";
				target: "select_bg";
			}
			program { name: "unselected";
				signal: "elm,state,unselected";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
				target: "select_bg";
			}
			program { name: "action_focus";
				signal: "elm,action,focus_highlight,show";
				source: "elm";
				action: STATE_SET "enabled" 0.0;
				target: "focus_bg";
			}
			program { name: "action_unfocus";
				signal: "elm,action,focus_highlight,hide";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "focus_bg";
			}
			GENGRID_PROGRAM_DEFAULT(
				target: "elm.swallow.icon";
				target: "select_bg";
			)
		}
	}
}//end collection
//end file
