/*
* Copyright (c) 2000-2015 Samsung Electronics Co., Ltd All Rights Reserved
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*
*/

#include "cam_funcs.edc"
#include "../../inc/edc_image_name.h"

#define CAM_FOCUS_IMG "CAMERA_FOCUS_IMG"

#define POPUP_2BUTTON_HEIGHT 27.0
#define POPUP_2BUTTON_GAP 12.0
#define POPUP_2BUTTON_TOP_GAP 6.0
#define POPUP_2BUTTON_LEFT_GAP 6.0
#define POPUP_2BUTTON_RIGHT_GAP 6.0
#define POPUP_2BUTTON_TEXT_MIN 0 94

#define FOCUS_IMAGE_SMALLER_WIDTH 75
#define FOCUS_IMAGE_SMALLER_HEIGHT 75

#define FOCUS_IMAGE_WIDTH 90
#define FOCUS_IMAGE_HEIGHT 90

/*between self and setting button*/
#define EDIT_BOX_X (580)
#define EDIT_BOX_Y (0)

#define EDIT_BOX_2_Y (165)
#define EDIT_BOX_3_Y (141)
#define EDIT_BOX_2_H (390)
#define EDIT_BOX_3_H (438)

images {
	image: FOCUS_GUIDE_OUTER_CIRCLE_IMAGE COMP;
	image: ZOOM_PINCH_IMAGE COMP;
	image: FOCUS_GUIDE_NOTREADY_IMAGE COMP;
	image: FOCUS_GUIDE_FOCUSED_IMAGE COMP;
	image: FOCUS_GUIDE_FAILED_IMAGE COMP;
	image: TIMER_ICON_01_IMAGE COMP;
	image: TIMER_ICON_02_IMAGE COMP;
	image: TIMER_ICON_03_IMAGE COMP;
	image: TIMER_ICON_04_IMAGE COMP;
	image: TIMER_ICON_05_IMAGE COMP;
	image: TIMER_ICON_06_IMAGE COMP;
	image: TIMER_ICON_07_IMAGE COMP;
	image: TIMER_ICON_08_IMAGE COMP;
	image: TIMER_ICON_09_IMAGE COMP;
	image: TIMER_ICON_10_IMAGE COMP;
}

collections {
	base_scale: 1.8;
	group {
			min: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
			max: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
			   name: "focus_inner_circle";
			   images {
						image : FOCUS_GUIDE_OUTER_CIRCLE_IMAGE COMP;
						image : FOCUS_GUIDE_INNER_CIRCLE_IMAGE COMP;
				}
			   parts {
					   part { name: "focus_bg";
							  type: SPACER;
							  mouse_events: 0;
							  repeat_events: 0;
							  scale: 1;
							  description { state: "default" 0.0;
							  			min : FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
										max: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
							  }
					   }
					   part {
							  name: "focus_outer_circle";
							  type: IMAGE;
							   description {
								   state: "default" 0.0;
								   min: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
								   max: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
								   fixed: 1 1;
								   align: 0.5 0.5;
								   visible: 1;
								   rel1 { relative: 0.0 0.0;}
								   rel2 { relative: 1.0 1.0;}
								   image { normal: FOCUS_GUIDE_OUTER_CIRCLE_IMAGE; }
								   map {
									   on: 1;
									   perspective_on: 1;
									   rotation {
										   x: 0.0;
										   y: 0.0;
										   z: 0.0;
									   }
								   }
							   }
							   description {
								   state: "start" 0.0;
								   inherit: "default" 0.0;
								   min: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
								   max: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
							   }
							   description {
								   state: "half" 0.0;
								   inherit: "default" 0.0;
								   min: FOCUS_IMAGE_SMALLER_WIDTH FOCUS_IMAGE_SMALLER_WIDTH;
								   max: FOCUS_IMAGE_SMALLER_WIDTH FOCUS_IMAGE_SMALLER_WIDTH;
							   }
						       description {
								   state: "final" 0.0;
								   inherit: "default" 0.0;
								   min: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
								   max: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
							   }
						}

					   part {
							  name: "focus_inner_circle";
							  type: IMAGE;
							   description {
								   state: "default" 0.0;
								   min: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
								   max: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
								   fixed: 1 1;
								   align: 0.5 0.5;
								   visible: 1;
								   rel1 { relative: 0.0 0.0;}
								   rel2 { relative: 1.0 1.0;}
								   image { normal: FOCUS_GUIDE_INNER_CIRCLE_IMAGE; }
								   map {
									   on: 1;
									   perspective_on: 1;
									   rotation {
										   x: 0.0;
										   y: 0.0;
										   z: 0.0;
									   }
								   }
							   }
							   description {
								   state: "start" 0.0;
								   inherit: "default" 0.0;
								   map {
									   on: 1;
									   perspective_on: 1;
									   rotation {
										   x: 0.0;
										   y: 0.0;
										   z: 0.0;
									   }
								   }
							   }
							  description {
								   state: "half" 0.0;
								   inherit: "default" 0.0;
								   map {
									   on: 1;
									   perspective_on: 1;
									   rotation {
										   x: 0.0;
										   y: 0.0;
										   z: 90.0;
									   }
								   }
							   }
							   description {
								   state: "final" 0.0;
								   inherit: "default" 0.0;
								   map {
									   on: 1;
									   perspective_on: 1;
									   rotation {
										   x: 0.0;
										   y: 0.0;
										   z: 0.0;
									   }
								   }
							   }
						  }
		  			}
		   programs {
			   program {
				   name: "rotate,start";
				   signal: "btn,rotate,start";
				   source: "prog";
				   action: STATE_SET "start" 0.0;
				   target: "focus_inner_circle";
				   target: "focus_outer_circle";
			   }
			   program {
				   name: "rotate,half";
				   signal: "btn,rotate,half";
				   source: "prog";
				   action: STATE_SET "half" 0.0;
				   transition: LINEAR 0.15;
				   target: "focus_inner_circle";
				   target: "focus_outer_circle";
			   }
			   program {
				   name: "rotate,final";
				   signal: "btn,rotate,final";
				   source: "prog";
				   action: STATE_SET "final" 0.0;
				   transition: LINEAR 0.15;
				   target: "focus_inner_circle";
				   target: "focus_outer_circle";
			   }
		   }
	   }

	group {
		name: "gallery_image";
		parts{
			part{
				name : "bg";
				type: RECT;
				scale: 1;
				description{
					state: "default" 0.0;
					rel1 {relative : 0.0 0.0 ;}
					rel2 {relative : 1.0 1.0 ;}
					align: 0.5 0.5;
					visible: 0;
					color: 0 0 0 150;
				}
				description{
					state : "start_display" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part{
				name : "gallery";
				type: SWALLOW;
				scale: 1;
				description{
					state: "default" 0.0;
					rel1 {relative : 1.0 0.0 ;}
					rel2 {relative : 2.0 1.0 ;}
					fixed: 1 1;
					align: 0.0 0.0;
					visible: 1;
				}
			}
		}
		programs{
			program{
				name: "default";
				source: "program";
				signal: "start_default";
				action: STATE_SET "default" 0.0;
				target : "bg";
				target : "gallery";
			}
			program{
				name: "display";
				source: "program";
				signal: "start_display";
				action: STATE_SET "start_display" 0.0;
				target: "bg";
			}
		}
	}
group {
		name: "after_shot_image";
		parts{
			part{
				name : "bg";
				type: RECT;
				scale: 1;
				description{
					state: "default" 0.0;
					rel1 {relative : 0.0 0.0 ;}
					rel2 {relative : 1.0 1.0 ;}
					align: 0.5 0.5;
					visible: 0;
					color: 0 0 0 150;
				}
				description{
					state : "show_display" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part{
				name : "after_shot";
				type: SWALLOW;
				scale: 1;
				description{
					state: "default" 0.0;
					rel1 {relative : 0.0 0.0 ;to: "bg";}
					rel2 {relative : 1.0 1.0 ;to: "bg";}
					color: 0 0 0 255;
					fixed: 1 1;
					align: 0.0 0.0;
					visible: 1;
				}
			}
		}
		programs{
			program{
				name: "default";
				source: "program";
				signal: "show_default";
				action: STATE_SET "default" 0.0;
				target : "bg";
				//target : "after_shot";
			}
			program{
				name: "display";
				source: "program";
				signal: "show_display";
				action: STATE_SET "show_display" 0.0;
				target: "bg";
			}
		}
	}
	group { name: "focus_image";
		min: CAMERA_FOCUS_W CAMERA_FOCUS_H;
		max: CAMERA_FOCUS_W CAMERA_FOCUS_H;
		parts{
			part {
				name:  "focus_outer_bg";
				type: IMAGE;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1 { relative: 0.0 0.0; }
					rel2 { relative: 1.0 1.0; }
				}
				description {
					state: "notready" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					max: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					fixed: 1 1;
					visible: 1;
					image{
						normal: FOCUS_GUIDE_OUTER_CIRCLE_IMAGE;
						}
					}
				description {
					state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
				description {
					state: "failed" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part {
				name: CAM_FOCUS_IMG;
				type: IMAGE;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;

					rel1 { relative: 0.0 0.0; }
					rel2 { relative: 1.0 1.0; }

				}
				description {
					state: "notready" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					max: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					fixed: 1 1;
					image{
						normal: FOCUS_GUIDE_INNER_CIRCLE_IMAGE;
					}
				}
				description {
					state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					max: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					fixed: 1 1;
					image{
						normal:FOCUS_GUIDE_FOCUSED_IMAGE;
						}
				}
				description {
					state: "failed" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					max: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					fixed: 1 1;
					image{
						normal: FOCUS_GUIDE_FAILED_IMAGE;
					}
				}
			}
		}

		programs {
			program { name: "focus,hide";
				source: "program";
				signal: "focus,hide";
				action: STATE_SET "default" 0.0;
				target: CAM_FOCUS_IMG;
				target: "focus_outer_bg";
			}
			program { name: "focus,notready";
				source: "program";
				signal: "focus,notready";
				action: STATE_SET "notready" 0.0;
				target: CAM_FOCUS_IMG;
				target: "focus_outer_bg";
			}
			program { name: "focus,focused";
				source: "program";
				signal: "focus,focused";
				action: STATE_SET "focused" 0.0;
				target: CAM_FOCUS_IMG;
				target: "focus_outer_bg";
			}
			program { name: "focus,failed";
				source: "program";
				signal: "focus,failed";
				action: STATE_SET "failed" 0.0;
				target: CAM_FOCUS_IMG;
				target: "focus_outer_bg";
			}
		}
	}
group { name: "touch_focus_image";
		min: CAMERA_FOCUS_W CAMERA_FOCUS_H;
		max: CAMERA_FOCUS_W CAMERA_FOCUS_H;
		parts{
			part {
				name:  "focus_outer_bg";
				type: IMAGE;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1 { relative: 0.0 0.0; }
					rel2 { relative: 1.0 1.0; }
				}
				description {
					state: "notready" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					max: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					fixed: 1 1;
					visible: 1;
					image{
						normal: ZOOM_PINCH_IMAGE;
						}
					}
				description {
					state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
				description {
					state: "failed" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part {
				name: CAM_FOCUS_IMG;
				type: IMAGE;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1 { relative: 0.0 0.0; }
					rel2 { relative: 1.0 1.0; }
				}
				description {
					state: "notready" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					max: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					fixed: 1 1;
					image{
						normal: ZOOM_PINCH_IMAGE;
					}
				}
				description {
					state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					max: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					fixed: 1 1;
					image{
						normal: ZOOM_PINCH_IMAGE;
						}
				}
				description {
					state: "failed" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					max: FOCUS_IMAGE_WIDTH FOCUS_IMAGE_HEIGHT;
					fixed: 1 1;
					image{
						normal: ZOOM_PINCH_IMAGE;
					}
				}
			}
		}
		programs {
			program { name: "focus,hide";
				source: "program";
				signal: "focus,hide";
				action: STATE_SET "default" 0.0;
				target: CAM_FOCUS_IMG;
				target: "focus_outer_bg";
			}
			program { name: "focus,notready";
				source: "program";
				signal: "focus,notready";
				action: STATE_SET "notready" 0.0;
				target: CAM_FOCUS_IMG;
				target: "focus_outer_bg";
			}
			program { name: "focus,focused";
				source: "program";
				signal: "focus,focused";
				action: STATE_SET "focused" 0.0;
				target: CAM_FOCUS_IMG;
				target: "focus_outer_bg";
			}
			program { name: "focus,failed";
				source: "program";
				signal: "focus,failed";
				action: STATE_SET "failed" 0.0;
				target: CAM_FOCUS_IMG;
				target: "focus_outer_bg";
			}
		}
	}
#define TIMER_ICON_W	190
#define TIMER_ICON_H	190

	group{ name: "timer_icon_landscape";

		parts{
			part {
				name: "icon";
				type: IMAGE;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 1;
					rel1 { relative: 0 1;offset:24 -145;}
					rel2 { relative: 0 1;offset:139 -30; }
				}
				description {
					state: "timer_icon_01" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_01_IMAGE; }
				}
				description {
					state: "timer_icon_02" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_02_IMAGE; }
				}
				description {
					state: "timer_icon_03" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_03_IMAGE; }
				}
				description {
					state: "timer_icon_04" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_04_IMAGE; }
				}
				description {
					state: "timer_icon_05" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_05_IMAGE; }
				}
				description {
					state: "timer_icon_06" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_06_IMAGE; }
				}
				description {
					state: "timer_icon_07" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_07_IMAGE; }
				}
				description {
					state: "timer_icon_08" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_08_IMAGE; }
				}
				description {
					state: "timer_icon_09" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_09_IMAGE; }
				}
				description {
					state: "timer_icon_10" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_10_IMAGE; }
				}
			}
		}
		programs {
			program { name: "timer_icon_01";
			   signal: "timer_icon_01,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_01" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_02";
			   signal: "timer_icon_02,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_02" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_03";
			   signal: "timer_icon_03,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_03" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_04";
			   signal: "timer_icon_04,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_04" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_05";
			   signal: "timer_icon_05,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_05" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_06";
			   signal: "timer_icon_06,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_06" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_07";
			   signal: "timer_icon_07,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_07" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_08";
			   signal: "timer_icon_08,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_08" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_09";
			   signal: "timer_icon_09,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_09" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_10";
			   signal: "timer_icon_10,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_10" 0.0;
			   target: "icon";
			}
		}
	}

	group{ name: "timer_icon_landscape_inverse";

		parts{
			part {
				name: "icon";
				type: IMAGE;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 1;
					rel1 { relative: 1 0;offset:-139 30;}
					rel2 { relative: 1 0;offset:-24 145; }
				}
				description {
					state: "timer_icon_01" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_01_IMAGE; }
				}
				description {
					state: "timer_icon_02" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_02_IMAGE; }
				}
				description {
					state: "timer_icon_03" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_03_IMAGE; }
				}
				description {
					state: "timer_icon_04" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_04_IMAGE; }
				}
				description {
					state: "timer_icon_05" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_05_IMAGE; }
				}
				description {
					state: "timer_icon_06" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_06_IMAGE; }
				}
				description {
					state: "timer_icon_07" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_07_IMAGE; }
				}
				description {
					state: "timer_icon_08" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_08_IMAGE; }
				}
				description {
					state: "timer_icon_09" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_09_IMAGE; }
				}
				description {
					state: "timer_icon_10" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_10_IMAGE; }
				}
			}
		}
		programs {
			program { name: "timer_icon_01";
			   signal: "timer_icon_01,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_01" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_02";
			   signal: "timer_icon_02,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_02" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_03";
			   signal: "timer_icon_03,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_03" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_04";
			   signal: "timer_icon_04,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_04" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_05";
			   signal: "timer_icon_05,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_05" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_06";
			   signal: "timer_icon_06,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_06" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_07";
			   signal: "timer_icon_07,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_07" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_08";
			   signal: "timer_icon_08,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_08" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_09";
			   signal: "timer_icon_09,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_09" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_10";
			   signal: "timer_icon_10,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_10" 0.0;
			   target: "icon";
			}
		}
	}

	group{ name: "timer_icon_portrait";

		parts{
			part {
				name: "icon";
				type: IMAGE;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 1;
					rel1 { relative: 0 0; offset:24 30; }
					rel2 { relative: 0 0; offset:139 145; }
				}
				description {
					state: "timer_icon_01" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_01_IMAGE; }
				}
				description {
					state: "timer_icon_02" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_02_IMAGE; }
				}
				description {
					state: "timer_icon_03" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_03_IMAGE; }
				}
				description {
					state: "timer_icon_04" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_04_IMAGE; }
				}
				description {
					state: "timer_icon_05" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_05_IMAGE; }
				}
				description {
					state: "timer_icon_06" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_06_IMAGE; }
				}
				description {
					state: "timer_icon_07" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_07_IMAGE; }
				}
				description {
					state: "timer_icon_08" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_08_IMAGE; }
				}
				description {
					state: "timer_icon_09" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_09_IMAGE; }
				}
				description {
					state: "timer_icon_10" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_10_IMAGE; }
				}
			}
		}
		programs {
			program { name: "timer_icon_01";
			   signal: "timer_icon_01,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_01" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_02";
			   signal: "timer_icon_02,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_02" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_03";
			   signal: "timer_icon_03,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_03" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_04";
			   signal: "timer_icon_04,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_04" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_05";
			   signal: "timer_icon_05,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_05" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_06";
			   signal: "timer_icon_06,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_06" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_07";
			   signal: "timer_icon_07,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_07" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_08";
			   signal: "timer_icon_08,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_08" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_09";
			   signal: "timer_icon_09,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_09" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_10";
			   signal: "timer_icon_10,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_10" 0.0;
			   target: "icon";
			}
		}
	}
	group{ name: "timer_icon_portrait_inverse";

		parts{
			part {
				name: "icon";
				type: IMAGE;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 1;
					rel1 { relative: 1 1;  offset:-145 -139;}
					rel2 { relative: 1 1;  offset:-30 -24;}
				}
				description {
					state: "timer_icon_01" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_01_IMAGE; }
				}
				description {
					state: "timer_icon_02" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_02_IMAGE; }
				}
				description {
					state: "timer_icon_03" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_03_IMAGE; }
				}
				description {
					state: "timer_icon_04" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_04_IMAGE; }
				}
				description {
					state: "timer_icon_05" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_05_IMAGE; }
				}
				description {
					state: "timer_icon_06" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_06_IMAGE; }
				}
				description {
					state: "timer_icon_07" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_07_IMAGE; }
				}
				description {
					state: "timer_icon_08" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_08_IMAGE; }
				}
				description {
					state: "timer_icon_09" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_09_IMAGE; }
				}
				description {
					state: "timer_icon_10" 0.0;
					inherit: "default" 0.0;
					image { normal: TIMER_ICON_10_IMAGE; }
				}
			}
		}
		programs {
			program { name: "timer_icon_01";
			   signal: "timer_icon_01,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_01" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_02";
			   signal: "timer_icon_02,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_02" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_03";
			   signal: "timer_icon_03,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_03" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_04";
			   signal: "timer_icon_04,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_04" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_05";
			   signal: "timer_icon_05,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_05" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_06";
			   signal: "timer_icon_06,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_06" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_07";
			   signal: "timer_icon_07,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_07" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_08";
			   signal: "timer_icon_08,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_08" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_09";
			   signal: "timer_icon_09,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_09" 0.0;
			   target: "icon";
			}
			program { name: "timer_icon_10";
			   signal: "timer_icon_10,visible";
			   source: "elm";
			   action: STATE_SET "timer_icon_10" 0.0;
			   target: "icon";
			}
		}
	}

#define BATTERY_INDICATOR_DESCROPTION(battery_level, battery_image)	\
	description {	\
		state: battery_level 0.0;	\
		inherit: "default" 0.0;		\
		visible: 1;					\
		image { normal: battery_image; }	\
	}
#define BATTERY_INDICATOR_PROGRAM(battery_level)	\
	program {	\
		name: battery_level;	\
		source: "prog";			\
		signal: battery_level;	\
		script: { set_state(PART:"battery_indicator", battery_level, 0.0); }	\
	}

#define BATTERY_INDICATOR_W	82
#define BATTERY_INDICATOR_H	82
#define BATTERY_ICON_W		52
#define BATTERY_ICON_H		52

	group{
		name: "battery_indicator";

		images{
			image: INDICATOR_BATTERY_LEVEL_01_ICON COMP;
			image: INDICATOR_BATTERY_LEVEL_02_ICON COMP;
			image: INDICATOR_BATTERY_CHARGING_ICON COMP;
			image: INDICATOR_BATTERY_CHARGING_FULL_ICON COMP;
		}

		parts{
			part {
				name: "bg";
				type: RECT;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1 { relative: 0.0 0.0; }
					rel2 { relative: 1.0 1.0; }
				}
			}
			part {
				name: "battery_indicator";
				type: IMAGE;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1 { relative: (1 - BATTERY_ICON_W/BATTERY_INDICATOR_W)/2 0.0; to: "bg";}
					rel2 { relative: (1 + BATTERY_ICON_W/BATTERY_INDICATOR_W)/2 BATTERY_ICON_H/BATTERY_INDICATOR_H; to: "bg";}
					image { normal: INDICATOR_BATTERY_LEVEL_01_ICON; }
				}
				BATTERY_INDICATOR_DESCROPTION("battery_level_1", INDICATOR_BATTERY_LEVEL_01_ICON)
				BATTERY_INDICATOR_DESCROPTION("battery_level_2", INDICATOR_BATTERY_LEVEL_02_ICON)
				BATTERY_INDICATOR_DESCROPTION("battery_charging", INDICATOR_BATTERY_CHARGING_ICON)
				BATTERY_INDICATOR_DESCROPTION("battery_charging_full", INDICATOR_BATTERY_CHARGING_FULL_ICON)
			}
			part {
				name: "battery_level";
				type: TEXT;
				effect: OUTLINE;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 BATTERY_ICON_H/BATTERY_INDICATOR_H; to: "bg";}
					rel2 { relative: 1.0 1.0; to: "bg";}
					color: 220 220 220 255;
					text {
						font : FONT_NAME;
						size : 28;
						align: 0.5 1.0;
					}
					color2: 75 75 75 255;
				}
			}
		}
		programs {
			BATTERY_INDICATOR_PROGRAM("default")
			BATTERY_INDICATOR_PROGRAM("battery_level_1")
			BATTERY_INDICATOR_PROGRAM("battery_level_2")
			BATTERY_INDICATOR_PROGRAM("battery_charging")
			BATTERY_INDICATOR_PROGRAM("battery_charging_full")
		}
	}

#define POPUP_CONTENT_DEFAULT_PADDING_LEFT_RIGHT_MIN_INC 15
#define POPUP_CONTENT_DEFAULT_PADDING_TOP_BOTTOM_MIN_INC 2
#define POPUP_CHECK_VIEW_LAYOUT_CONTENT_MIN_INC 0 140
#define POPUP_CHECK_VIEW_LAYOUT_MIN_INC 0 252

	group { name: "popup_checkview_layout";
	   parts {
		  part { name: "bg";
			 scale: 1;
			 type: SPACER;
			 description { state: "default" 0.0;
				min: POPUP_CHECK_VIEW_LAYOUT_MIN_INC;
				fixed: 0 1;
			 }
		  }
		  part { name: "pad_l";
			 type: SPACER;
			 scale: 1;
			 description { state: "default" 0.0;
				min: POPUP_CONTENT_DEFAULT_PADDING_LEFT_RIGHT_MIN_INC 0;
				fixed: 1 0;
				rel1.relative: 0.0 0.0;
				rel2.relative: 0.0 1.0;
				align: 0.0 0.0;
			 }
		  }
		  part { name: "pad_r";
			 type: SPACER;
			 scale: 1;
			 description { state: "default" 0.0;
				min: POPUP_CONTENT_DEFAULT_PADDING_LEFT_RIGHT_MIN_INC 0;
				fixed: 1 0;
				rel1.relative: 1.0 0.0;
				rel2.relative: 1.0 1.0;
				align: 1.0 0.0;
			 }
		  }
		  part { name: "elm.swallow.content";
			 type: SWALLOW;
			 scale: 1;
			 description { state: "default" 0.0;
				min: POPUP_CHECK_VIEW_LAYOUT_CONTENT_MIN_INC;
				align: 0.5 0.0;
				rel2 {
				   relative: 1.0 0.0;
				   to: "elm.swallow.end";
				}
			 }
		  }
		  part { name: "pad_b";
			 type: SPACER;
			 scale: 1;
			 description { state: "default" 0.0;
				min: 0 POPUP_CONTENT_DEFAULT_PADDING_TOP_BOTTOM_MIN_INC;
				fixed: 0 1;
				rel1.relative: 0.0 1.0;
				rel1.relative: 1.0 1.0;
				align: 0.0 1.0;
			 }
		  }

		  part { name: "elm.swallow.end";
			 type: SWALLOW;
			 scale: 1;
			 description { state: "default" 0.0;
				align: 0.0 1.0;
				rel1 {
				   relative: 1.0 0.0;
				   to_x: "pad_l";
				   to_y: "pad_b";
				}
				rel2 {
				   relative: 0.0 0.0;
				   to_x: "pad_r";
				   to_y: "pad_b";
				}
			 }
		  }
	   }
	}



	images {
		image: SETTING_EDIT_BG_VER_IMAGE COMP;
		image: SETTING_EDIT_BG_VER_INV_IMAGE COMP;
		image: SETTING_EDIT_BG_HOR_IMAGE COMP;
		image: SETTING_EDIT_BG_HOR_INV_IMAGE COMP;
	}

	/*empty box can not be drop target, we have to use layout as drop target*/
	group { name: "dnd_box_drop_layout";
		parts {
			part {
				name: "bg_for_dnd";
				type: RECT;
				scale: 1;
				description {
					state:"default" 0.0;
					rel1 { relative: 0.0 0.0;}
					rel2 { relative: 1.0 1.0;}
					color: 255 255 255 0;
				}
			}
			part {
				name: "box_swallow";
				type: SWALLOW;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0;}
					rel2 { relative: 1.0 1.0;}
				}
			}
		} //end parts
	} //end group

	group {
		name: "edit_box_layout";
		parts {
			part { name: "bg";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description{
					state:"default" 0.0;
					rel1 { relative: 0.0 0.0;}
					rel2 { relative: 1.0 1.0;}
					color: 255 255 255 0;
				}
			}
			part {
				name: "box_area_bg";
				type: IMAGE;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; to: "box_area";}
					rel2 { relative: 1.0 1.0; to: "box_area";}
//					image {normal : SETTING_EDIT_BG_HOR_IMAGE;}
				}
				description {
					state: "landscape" 0.0;
					inherit: "default" 0.0;
				}
				description {
					state: "portrait" 0.0;
					inherit: "default" 0.0;
//					image {normal : SETTING_EDIT_BG_VER_IMAGE;}
				}
				description {
					state: "landscape_inverse" 0.0;
					inherit: "default" 0.0;
//					image {normal : SETTING_EDIT_BG_HOR_INV_IMAGE;}
				}
				description {
					state: "portrait_inverse" 0.0;
					inherit: "default" 0.0;
//					image {normal : SETTING_EDIT_BG_VER_INV_IMAGE;}
				}
			}
			part { name: "box_area";
				type: SWALLOW;
				scale: 1;
				SWALLOW_PART_DESCRIPTION_INVISIBLE_DEFAULT((EDIT_BOX_X/MAIN_W), (EDIT_BOX_Y/MAIN_H),
					((EDIT_BOX_X+EDIT_BOX_W)/MAIN_W),((EDIT_BOX_Y+EDIT_BOX_H)/MAIN_H),"bg")
			}
		}

		programs {
			program {
				name : "edit_box_layout,set,landscape";
				source: "edit_box_layout";
				signal: "landscape";
				script: {
					set_state(PART:"box_area_bg", "landscape", 0.0);
					set_state(PART:"box_area", "landscape", 0.0);
				}
			}
			program {
				name : "edit_box_layout,set,portrait";
				source: "edit_box_layout";
				signal: "portrait";
				script: {
					set_state(PART:"box_area_bg", "portrait", 0.0);
					set_state(PART:"box_area", "portrait", 0.0);
				}
			}
			program {
				name : "edit_box_layout,set,landscape_inverse";
				source: "edit_box_layout";
				signal: "landscape_inverse";
				script: {
					set_state(PART:"box_area_bg", "landscape_inverse", 0.0);
					set_state(PART:"box_area", "landscape_inverse", 0.0);
				}
			}
			program {
				name : "edit_box_layout,set,portrait_inverse";
				source: "edit_box_layout";
				signal: "portrait_inverse";
				script: {
					set_state(PART:"box_area_bg", "portrait_inverse", 0.0);
					set_state(PART:"box_area", "portrait_inverse", 0.0);
				}
			}
		}
	}

	group {
		name: "timer_gengrid_popup_layout";

		images {
			image: SETTING_POPUP_BG COMP;
		}
		parts {
			part {
				name: "bg";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description{
					state:"default" 0.0;
					rel1 { relative: 0.0 0.0;}
					rel2 { relative: 1.0 1.0;}
					visible: 0;
				}
			}
			part { name: "grid_bg";
				type: IMAGE;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1 { relative: 0.0  0.0; to:"grid";}
					rel2 { relative: 1.0 1.0; to:"grid";}
					image {
						normal: SETTING_POPUP_BG;
					}
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "grid";
				type: SWALLOW;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: TIMER_GENGRID_POPUP_Y/MAIN_W  (MAIN_H-TIMER_GENGRID_POPUP_X-TIMER_GENGRID_POPUP_W)/MAIN_H; to:"bg";}
					rel2 { relative: (TIMER_GENGRID_POPUP_Y+TIMER_GENGRID_POPUP_H)/MAIN_W (MAIN_H-TIMER_GENGRID_POPUP_X)/MAIN_H; to:"bg";}
					visible: 0;
					min: TIMER_GENGRID_POPUP_ITEM_WIDTH 0;//<define as per required>;
					fixed: 1 0;
				}
				description {
					state: "landscape" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description {
					state: "landscape_inverse" 0.0;
					rel1 { relative: (MAIN_W-TIMER_GENGRID_POPUP_Y-TIMER_GENGRID_POPUP_H)/MAIN_W  TIMER_GENGRID_POPUP_X/MAIN_H; to:"bg";}
					rel2 { relative: (MAIN_W-TIMER_GENGRID_POPUP_Y)/MAIN_W  (TIMER_GENGRID_POPUP_X+TIMER_GENGRID_POPUP_W)/MAIN_H;  to:"bg";}
					visible: 1;
					min: TIMER_GENGRID_POPUP_ITEM_WIDTH 0;//<define as per required>;
					fixed: 1 0;
				}
				description {
					state: "portrait" 0.0;
					rel1 { relative: TIMER_GENGRID_POPUP_X/MAIN_H TIMER_GENGRID_POPUP_Y/MAIN_W; to:"bg";}
					rel2 { relative: (TIMER_GENGRID_POPUP_X+TIMER_GENGRID_POPUP_W)/MAIN_H (TIMER_GENGRID_POPUP_Y+TIMER_GENGRID_POPUP_H)/MAIN_W; to:"bg";}
					visible: 1;
					min: 0 TIMER_GENGRID_POPUP_ITEM_WIDTH;//<define as per required>;
					fixed: 0 1;
				}
				description {
					state: "portrait_inverse" 0.0;
					rel1 { relative: (MAIN_H-TIMER_GENGRID_POPUP_X-TIMER_GENGRID_POPUP_W)/MAIN_H (MAIN_W-TIMER_GENGRID_POPUP_Y-TIMER_GENGRID_POPUP_H)/MAIN_W; to:"bg";}
					rel2 { relative: (MAIN_H-TIMER_GENGRID_POPUP_X)/MAIN_H (MAIN_W-TIMER_GENGRID_POPUP_Y)/MAIN_W; to:"bg";}
					visible: 1;
					min: 0 TIMER_GENGRID_POPUP_ITEM_WIDTH;//<define as per required>;
					fixed: 0 1;
				}
			}
		}

		programs {
			program {
				name : "gengrid_popup_layout,set,landscape";
				source: "gengrid_popup_layout";
				signal: "landscape";
				script: {
					set_state(PART:"grid_bg", "visible", 0.0);
					set_state(PART:"grid", "landscape", 0.0);
				}
			}
			program {
				name : "gengrid_popup_layout,set,landscape_inverse";
				source: "gengrid_popup_layout";
				signal: "landscape_inverse";
				script: {
					set_state(PART:"grid_bg", "visible", 0.0);
					set_state(PART:"grid", "landscape_inverse", 0.0);
				}
			}
			program {
				name : "gengrid_popup_layout,set,portrait";
				source: "gengrid_popup_layout";
				signal: "portrait";
				script: {
					set_state(PART:"grid_bg", "visible", 0.0);
					set_state(PART:"grid", "portrait", 0.0);
				}
			}
			program {
				name : "gengrid_popup_layout,set,portrait_inverse";
				source: "gengrid_popup_layout";
				signal: "portrait_inverse";
				script: {
					set_state(PART:"grid_bg", "visible", 0.0);
					set_state(PART:"grid", "portrait_inverse", 0.0);
				}
			}
		}
	}

	group {
		name: "timer_grid";
		parts {
			part {
				name: "bg";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description{
					state:"default" 0.0;
					rel1 { relative: 0.0 0.0;}
					rel2 { relative: 1.0 1.0;}
					color: 255 255 255 0;
				}
			}
			part { name: "grid";
				type: SWALLOW;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; to: "bg";}
					rel2 { relative: 1.0 1.0; to: "bg";}
					min: TIMER_GENGRID_POPUP_ITEM_WIDTH TIMER_GENGRID_POPUP_ITEM_HEIGHT;//<define as per required>;
					visible: 1;
					color: 0 0 0 0;
					fixed: 0 1;
				}
			}
		}
	}/*end group : grid*/



	group {
		name: "effect_gengrid_popup_layout";

		images {
			image: SETTING_POPUP_BG COMP;
		}
		parts {
			part {
				name: "bg";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description{
					state:"default" 0.0;
					rel1 { relative: 0.0 0.0;}
					rel2 { relative: 1.0 1.0;}
					visible: 0;
				}
			}
			part { name: "grid_bg";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1 { relative: 0.0  0.0; to:"grid";}
					rel2 { relative: 1.0 1.0; to:"grid";}
			//		image {
			//			normal: SETTING_POPUP_BG;
			//		}
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 0 0 0 0;
				}
			}
			part { name: "grid";
				type: SWALLOW;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: EFFECT_GENGRID_POPUP_Y/MAIN_W  (MAIN_H-EFFECT_GENGRID_POPUP_X-EFFECT_GENGRID_POPUP_W)/MAIN_H; to:"bg";}
					rel2 { relative: (EFFECT_GENGRID_POPUP_Y+EFFECT_GENGRID_POPUP_H)/MAIN_W (MAIN_H-EFFECT_GENGRID_POPUP_X)/MAIN_H; to:"bg";}
					visible: 0;
			//		min: EFFECT_GENGRID_POPUP_ITEM_WIDTH 0;//<define as per required>;
					fixed: 1 0;
				}
				description {
					state: "landscape" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description {
					state: "landscape_inverse" 0.0;
					rel1 { relative: (MAIN_W-EFFECT_GENGRID_POPUP_Y-EFFECT_GENGRID_POPUP_H)/MAIN_W  EFFECT_GENGRID_POPUP_X/MAIN_H; to:"bg";}
					rel2 { relative: (MAIN_W-EFFECT_GENGRID_POPUP_Y)/MAIN_W  (EFFECT_GENGRID_POPUP_X+EFFECT_GENGRID_POPUP_W)/MAIN_H;  to:"bg";}
					visible: 1;
			//		min: EFFECT_GENGRID_POPUP_ITEM_WIDTH 0;//<define as per required>;
					fixed: 1 0;
				}
				description {
					state: "portrait" 0.0;
					rel1 { relative: EFFECT_GENGRID_POPUP_X/MAIN_H EFFECT_GENGRID_POPUP_Y/MAIN_W; to:"bg";}
					rel2 { relative: (EFFECT_GENGRID_POPUP_X+EFFECT_GENGRID_POPUP_W)/MAIN_H (EFFECT_GENGRID_POPUP_Y+EFFECT_GENGRID_POPUP_H)/MAIN_W; to:"bg";}
					visible: 1;
			//		min: 0 EFFECT_GENGRID_POPUP_ITEM_WIDTH;//<define as per required>;
					fixed: 0 1;
				}
				description {
					state: "portrait_inverse" 0.0;
					rel1 { relative: (MAIN_H-EFFECT_GENGRID_POPUP_X-EFFECT_GENGRID_POPUP_W)/MAIN_H (MAIN_W-EFFECT_GENGRID_POPUP_Y-EFFECT_GENGRID_POPUP_H)/MAIN_W; to:"bg";}
					rel2 { relative: (MAIN_H-EFFECT_GENGRID_POPUP_X)/MAIN_H (MAIN_W-EFFECT_GENGRID_POPUP_Y)/MAIN_W; to:"bg";}
					visible: 1;
			//		min: 0 EFFECT_GENGRID_POPUP_ITEM_WIDTH;//<define as per required>;
					fixed: 0 1;
				}
			}
		}

		programs {
			program {
				name : "gengrid_popup_layout,set,landscape";
				source: "gengrid_popup_layout";
				signal: "landscape";
				script: {
					set_state(PART:"grid_bg", "visible", 0.0);
					set_state(PART:"grid", "landscape", 0.0);
				}
			}
			program {
				name : "gengrid_popup_layout,set,landscape_inverse";
				source: "gengrid_popup_layout";
				signal: "landscape_inverse";
				script: {
					set_state(PART:"grid_bg", "visible", 0.0);
					set_state(PART:"grid", "landscape_inverse", 0.0);
				}
			}
			program {
				name : "gengrid_popup_layout,set,portrait";
				source: "gengrid_popup_layout";
				signal: "portrait";
				script: {
					set_state(PART:"grid_bg", "visible", 0.0);
					set_state(PART:"grid", "portrait", 0.0);
				}
			}
			program {
				name : "gengrid_popup_layout,set,portrait_inverse";
				source: "gengrid_popup_layout";
				signal: "portrait_inverse";
				script: {
					set_state(PART:"grid_bg", "visible", 0.0);
					set_state(PART:"grid", "portrait_inverse", 0.0);
				}
			}
		}
	}

	group {
		name: "effect_grid";
		parts {
			part {
				name: "bg";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description{
					state:"default" 0.0;
					rel1 { relative: 0.0 0.0;}
					rel2 { relative: 1.0 1.0;}
					color: 255 255 255 0;
				}
			}
			part { name: "grid";
				type: SWALLOW;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; to: "bg";}
					rel2 { relative: 1.0 1.0; to: "bg";}
					min: EFFECT_GENGRID_POPUP_ITEM_WIDTH EFFECT_GENGRID_POPUP_ITEM_HEIGHT;//<define as per required>;
					visible: 1;
					color: 0 0 0 0;
					fixed: 0 1;
				}
			}
		}
	}/*end group : grid*/

	group {
		name: "gengrid_popup_arrow";
		images {
			image: CTXPOPUP_LEFT_ARROW_IMAGE COMP;
			image: CTXPOPUP_RIGHT_ARROW_IMAGE COMP;
			image: CTXPOPUP_TOP_ARROW_IMAGE COMP;
			image: CTXPOPUP_BOTTOM_ARROW_IMAGE COMP;
		}

		parts {
			part {
				name: "bg";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description{
				state:"default" 0.0;
				rel1 { relative: 0.0 0.0;}
				rel2 { relative: 1.0 1.0;}
				color: 255 255 255 0;
			}
			}
			part {
				name: "popup_arrow";
				type: IMAGE;
				description {
					state: "default" 0.0;
					visible: 0;
					fixed: 1 1;
					align: 1.0 0.5;
					min: CTXPOPUP_CAMERA_ARROW_HEIGHT CTXPOPUP_CAMERA_ARROW_WIDTH;
					min: CTXPOPUP_CAMERA_ARROW_HEIGHT CTXPOPUP_CAMERA_ARROW_WIDTH;
					image.normal: CTXPOPUP_LEFT_ARROW_IMAGE;
				}
				description {
					state: "landscape" 0.0;
					visible: 1;
					fixed: 1 1;
					align: 1.0 0.5;
					min: CTXPOPUP_CAMERA_ARROW_HEIGHT CTXPOPUP_CAMERA_ARROW_WIDTH;
					min: CTXPOPUP_CAMERA_ARROW_HEIGHT CTXPOPUP_CAMERA_ARROW_WIDTH;
					image.normal: CTXPOPUP_LEFT_ARROW_IMAGE;
				}
				description {
					state: "landscape_inverse" 0.0;
					visible: 1;
					fixed: 1 1;
					align: 0.0 0.5;
					min: CTXPOPUP_CAMERA_ARROW_HEIGHT CTXPOPUP_CAMERA_ARROW_WIDTH;
					min: CTXPOPUP_CAMERA_ARROW_HEIGHT CTXPOPUP_CAMERA_ARROW_WIDTH;
					image.normal: CTXPOPUP_RIGHT_ARROW_IMAGE;
				}
				description {
					state: "portrait" 0.0;
					visible: 1;
					fixed: 1 1;
					align: 0.5 1.0;
					min: CTXPOPUP_CAMERA_ARROW_WIDTH CTXPOPUP_CAMERA_ARROW_HEIGHT;
					min: CTXPOPUP_CAMERA_ARROW_WIDTH CTXPOPUP_CAMERA_ARROW_HEIGHT;
					image.normal: CTXPOPUP_TOP_ARROW_IMAGE;
				}
				description {
					state: "portrait_inverse" 0.0;
					visible: 1;
					fixed: 1 1;
					align: 0.5 0.0;
					min: CTXPOPUP_CAMERA_ARROW_WIDTH CTXPOPUP_CAMERA_ARROW_HEIGHT;
					min: CTXPOPUP_CAMERA_ARROW_WIDTH CTXPOPUP_CAMERA_ARROW_HEIGHT;
					image.normal: CTXPOPUP_BOTTOM_ARROW_IMAGE;
				}
			}
		}
		programs {
			program {
				name : "gengrid_popup_arrow,set,landscape";
				source: "gengrid_popup_arrow";
				signal: "landscape";
				script: {
					set_state(PART:"popup_arrow", "landscape", 0.0);
				}
			}
			program {
				name : "gengrid_popup_arrow,set,landscape_inverse";
				source: "gengrid_popup_arrow";
				signal: "landscape_inverse";
				script: {
					set_state(PART:"popup_arrow", "landscape_inverse", 0.0);
				}
			}
			program {
				name : "gengrid_popup_arrow,set,portrait";
				source: "gengrid_popup_arrow";
				signal: "portrait";
				script: {
					set_state(PART:"popup_arrow", "portrait", 0.0);
				}
			}
			program {
				name : "gengrid_popup_arrow,set,portrait_inverse";
				source: "gengrid_popup_arrow";
				signal: "portrait_inverse";
				script: {
					set_state(PART:"popup_arrow", "portrait_inverse", 0.0);
				}
			}
		}
	}/*end group : edit_box_effect_tray_arrow*/
}
